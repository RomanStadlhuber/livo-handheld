# this is the dockerfile from which the installation on ROS2
# should take place initially, but for some reason the commands
# fail during the "$ docker build" process and only succeed
# when performed in a running container...
FROM ros:humble AS base
# install necessary build depenencies
RUN apt update && apt install -y --no-install-recommends gnupg neovim byobu mesa-utils
RUN DEBIAN_FRONTEND='noninteractive' apt update && apt install -y -q \
        meson \
        python3-colcon-meson \
        ninja-build \
        pkg-config \
        libyaml-dev \
        python3-yaml \
        python3-ply \
        python3-jinja2 \
        libevent-dev \
        libdrm-dev \
        libcap-dev \
        python3-pip \
        python3-opencv
### Install Libcamera ROS Driver ####
WORKDIR /ros2_ws/src
# Install libcamera and the camera_ros node from source
RUN git clone https://github.com/raspberrypi/libcamera.git && cd libcamera && git checkout 6ddd79b && cd ..
RUN git clone https://github.com/christianrauch/camera_ros.git
# installation insturctions from camera_ros repo, but build will be perfomed later, when livox driver is loaded
RUN /bin/bash -c "source /opt/ros/$ROS_DISTRO/setup.bash && \
    cd /ros2_ws && rosdep update && \
    rosdep install -t exec -y --from-paths src --ignore-src --rosdistro $ROS_DISTRO --skip-keys=libcamera"
### Install Livox SDK & ROS driver
WORKDIR /install
RUN git clone https://github.com/Livox-SDK/Livox-SDK2.git
RUN cd Livox-SDK2 && mkdir build && cd build && cmake .. && make -j 8 && make install
WORKDIR /ros2_ws/src
RUN git clone https://github.com/Livox-SDK/livox_ros_driver2.git
# NOTE: PCL is required as a dependency by the livox ROS driver!
RUN apt update && apt install -y -q ros-$ROS_DISTRO-pcl*
RUN /bin/bash -c "source /opt/ros/$ROS_DISTRO/setup.bash && \
    cd /ros2_ws/src/livox_ros_driver2 && ./build.sh humble"
WORKDIR /ros2_ws/src
FROM base AS development
COPY init.vim /root/.config/nvim/init.vim
RUN echo "source /opt/ros/$ROS_DISTRO/setup.bash" >> /root/.bashrc                                                                                             â”‚~
RUN echo "source /ros2_ws/install/setup.bash" >> /root/.bashrc
FROM development AS deploy
# TODO: install "runner" package and webapp, set entrypoint